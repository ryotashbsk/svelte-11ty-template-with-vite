@use 'import' as i;

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;

  &:before,
  &:after {
    box-sizing: initial !important;
  }

  .preload & {
    transition: none !important;
  }
}

html,
body {
  margin: 0;
}

html {
  font-size: i.vw_sp(i.$fs-sp);

  @include i.mq('min', 'mobile') {
    font-size: i.$fs-pc + px;
  }
}

body {
  width: 100%;
  height: 100%;
  font-family: i.$base-font;
  line-height: 2;
  text-align: left;
  line-break: normal;
  word-wrap: break-word;
  letter-spacing: 0.03em;
  word-break: normal;
  text-size-adjust: 100%;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-feature-settings: 'palt' 1;
  -ms-overflow-style: none;

  &.js-loading.js-menu-open {
    overflow: hidden;
  }
}

h1 {
  line-height: 1;
}

article,
aside,
details,
figcaption,
figure,
picture,
footer,
header,
main,
menu,
nav,
section,
summary,
address {
  display: block;
}

audio,
canvas,
progress,
video {
  display: inline-block;
  vertical-align: baseline;
}

ul,
ol {
  list-style: none;
  list-style-type: none;
  list-style-position: inside;
  list-style-image: none;
  .edge & {
    list-style-image: url(data:0);
  }
}

dt {
  font-weight: bold;
}

dd {
  margin: 0;
}

img {
  height: auto;
  max-width: 100%;
  color: #fff;
  width: auto;
  vertical-align: middle;
  border: 0;
}

a {
  color: i.$base-color;
  outline: 0;
  text-decoration: none;
  -webkit-text-decoration-skip: objects;
  text-decoration-skip: objects;
}

b,
strong,
em {
  font-weight: bold;
  font-style: normal;
}

small {
  font-size: 80%;
}

table {
  width: 100%;
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  font-weight: normal;
  padding: 0;
  vertical-align: top;
  text-align: left;
}

svg {
  display: block;
  width: 100%;
  height: 100%;
}

button {
  font-family: inherit;
}

.pointer {
  cursor: pointer;
}

[data-js-focus-visible] :focus:not([data-focus-visible-added]) {
  outline: none;
}
